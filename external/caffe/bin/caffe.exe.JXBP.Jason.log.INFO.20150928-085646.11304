Log file created at: 2015/09/28 08:56:46
Running on machine: JXBP
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
I0928 08:56:46.904356 16504 solver.cpp:58] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 10000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: CPU
net: "examples/mnist/lenet_train_test.prototxt"
I0928 08:56:46.904356 16504 solver.cpp:100] Creating training net from net file: examples/mnist/lenet_train_test.prototxt
I0928 08:56:46.919984 16504 net.cpp:339] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0928 08:56:46.919984 16504 net.cpp:339] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0928 08:56:46.919984 16504 net.cpp:50] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_leveldb"
    batch_size: 64
    backend: LEVELDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 20
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool2"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0928 08:56:46.935606 16504 net.cpp:76] Memory required for data: 0
I0928 08:56:46.935606 16504 layer_factory.hpp:76] Creating layer mnist
I0928 08:56:46.944921 16504 common.cpp:32] System entropy source not available, using fallback algorithm to generate seed instead.
I0928 08:56:46.946924 16504 net.cpp:110] Creating Layer mnist
I0928 08:56:46.947425 16504 net.cpp:433] mnist -> data
I0928 08:56:46.947929 16504 net.cpp:433] mnist -> label
I0928 08:56:46.960456  8468 db_leveldb.cpp:17] Opened leveldb examples/mnist/mnist_train_leveldb
I0928 08:56:46.961962 16504 data_layer.cpp:44] output data size: 64,1,28,28
I0928 08:56:46.962462 16504 base_data_layer.cpp:66] Initializing prefetch
I0928 08:56:46.963965 16504 base_data_layer.cpp:69] Prefetch initialized.
I0928 08:56:46.964467 16504 net.cpp:155] Setting up mnist
I0928 08:56:46.964967 16504 net.cpp:163] Top shape: 64 1 28 28 (50176)
I0928 08:56:46.964967 16504 net.cpp:163] Top shape: 64 (64)
I0928 08:56:46.965469 16504 net.cpp:174] Memory required for data: 200960
I0928 08:56:46.967473 16504 layer_factory.hpp:76] Creating layer conv1
I0928 08:56:46.967974 16504 net.cpp:110] Creating Layer conv1
I0928 08:56:46.967974 16504 net.cpp:477] conv1 <- data
I0928 08:56:46.968977 16504 net.cpp:433] conv1 -> conv1
I0928 08:56:46.969478 16504 net.cpp:155] Setting up conv1
I0928 08:56:46.969980 16504 net.cpp:163] Top shape: 64 20 24 24 (737280)
I0928 08:56:46.970481 16504 net.cpp:174] Memory required for data: 3150080
I0928 08:56:46.972403 16504 layer_factory.hpp:76] Creating layer pool1
I0928 08:56:46.972903 16504 net.cpp:110] Creating Layer pool1
I0928 08:56:46.973404 16504 net.cpp:477] pool1 <- conv1
I0928 08:56:46.973906 16504 net.cpp:433] pool1 -> pool1
I0928 08:56:46.974406  6760 data_layer.cpp:105] Prefetch batch: 10 ms.
I0928 08:56:46.974907 16504 net.cpp:155] Setting up pool1
I0928 08:56:46.974907  6760 data_layer.cpp:106]      Read time: 2.005 ms.
I0928 08:56:46.975910 16504 net.cpp:163] Top shape: 64 20 12 12 (184320)
I0928 08:56:46.977416  6760 data_layer.cpp:107] Transform time: 3.509 ms.
I0928 08:56:46.977916 16504 net.cpp:174] Memory required for data: 3887360
I0928 08:56:46.979418 16504 layer_factory.hpp:76] Creating layer conv2
I0928 08:56:46.979920 16504 net.cpp:110] Creating Layer conv2
I0928 08:56:46.980422 16504 net.cpp:477] conv2 <- pool1
I0928 08:56:46.980922 16504 net.cpp:433] conv2 -> conv2
I0928 08:56:46.984431  6760 data_layer.cpp:105] Prefetch batch: 5 ms.
I0928 08:56:46.984935  6760 data_layer.cpp:106]      Read time: 0.501 ms.
I0928 08:56:46.985435  6760 data_layer.cpp:107] Transform time: 3.007 ms.
I0928 08:56:46.985435 16504 net.cpp:155] Setting up conv2
I0928 08:56:46.986435 16504 net.cpp:163] Top shape: 64 50 8 8 (204800)
I0928 08:56:46.986937 16504 net.cpp:174] Memory required for data: 4706560
I0928 08:56:46.988941 16504 layer_factory.hpp:76] Creating layer pool2
I0928 08:56:46.989943 16504 net.cpp:110] Creating Layer pool2
I0928 08:56:46.990445 16504 net.cpp:477] pool2 <- conv2
I0928 08:56:46.990947 16504 net.cpp:433] pool2 -> pool2
I0928 08:56:46.991447 16504 net.cpp:155] Setting up pool2
I0928 08:56:46.991948 16504 net.cpp:163] Top shape: 64 50 4 4 (51200)
I0928 08:56:46.992449 16504 net.cpp:174] Memory required for data: 4911360
I0928 08:56:46.992954  6760 data_layer.cpp:105] Prefetch batch: 7 ms.
I0928 08:56:46.994956  6760 data_layer.cpp:106]      Read time: 0 ms.
I0928 08:56:46.994457 16504 layer_factory.hpp:76] Creating layer ip1
I0928 08:56:46.995457  6760 data_layer.cpp:107] Transform time: 1.504 ms.
I0928 08:56:46.995960 16504 net.cpp:110] Creating Layer ip1
I0928 08:56:46.996963 16504 net.cpp:477] ip1 <- pool2
I0928 08:56:46.997462 16504 net.cpp:433] ip1 -> ip1
I0928 08:56:47.043572 16504 net.cpp:155] Setting up ip1
I0928 08:56:47.044083 16504 net.cpp:163] Top shape: 64 500 (32000)
I0928 08:56:47.044575 16504 net.cpp:174] Memory required for data: 5039360
I0928 08:56:47.045578 16504 layer_factory.hpp:76] Creating layer relu1
I0928 08:56:47.046080 16504 net.cpp:110] Creating Layer relu1
I0928 08:56:47.046581 16504 net.cpp:477] relu1 <- ip1
I0928 08:56:47.047583 16504 net.cpp:419] relu1 -> ip1 (in-place)
I0928 08:56:47.048084 16504 net.cpp:155] Setting up relu1
I0928 08:56:47.048584 16504 net.cpp:163] Top shape: 64 500 (32000)
I0928 08:56:47.049088 16504 net.cpp:174] Memory required for data: 5167360
I0928 08:56:47.049587 16504 layer_factory.hpp:76] Creating layer ip2
I0928 08:56:47.050089 16504 net.cpp:110] Creating Layer ip2
I0928 08:56:47.050590 16504 net.cpp:477] ip2 <- ip1
I0928 08:56:47.051592 16504 net.cpp:433] ip2 -> ip2
I0928 08:56:47.053095 16504 net.cpp:155] Setting up ip2
I0928 08:56:47.053598 16504 net.cpp:163] Top shape: 64 10 (640)
I0928 08:56:47.054600 16504 net.cpp:174] Memory required for data: 5169920
I0928 08:56:47.055601 16504 layer_factory.hpp:76] Creating layer loss
I0928 08:56:47.055601 16504 net.cpp:110] Creating Layer loss
I0928 08:56:47.056102 16504 net.cpp:477] loss <- ip2
I0928 08:56:47.056604 16504 net.cpp:477] loss <- label
I0928 08:56:47.057106 16504 net.cpp:433] loss -> loss
I0928 08:56:47.057611 16504 layer_factory.hpp:76] Creating layer loss
I0928 08:56:47.058109 16504 net.cpp:155] Setting up loss
I0928 08:56:47.058609 16504 net.cpp:163] Top shape: (1)
I0928 08:56:47.059110 16504 net.cpp:168]     with loss weight 1
I0928 08:56:47.059110 16504 net.cpp:174] Memory required for data: 5169924
I0928 08:56:47.059612 16504 net.cpp:236] loss needs backward computation.
I0928 08:56:47.060112 16504 net.cpp:236] ip2 needs backward computation.
I0928 08:56:47.060614 16504 net.cpp:236] relu1 needs backward computation.
I0928 08:56:47.061115 16504 net.cpp:236] ip1 needs backward computation.
I0928 08:56:47.061616 16504 net.cpp:236] pool2 needs backward computation.
I0928 08:56:47.062118 16504 net.cpp:236] conv2 needs backward computation.
I0928 08:56:47.062118 16504 net.cpp:236] pool1 needs backward computation.
I0928 08:56:47.062618 16504 net.cpp:236] conv1 needs backward computation.
I0928 08:56:47.063623 16504 net.cpp:240] mnist does not need backward computation.
I0928 08:56:47.063623 16504 net.cpp:283] This network produces output loss
I0928 08:56:47.064623 16504 net.cpp:297] Network initialization done.
I0928 08:56:47.064623 16504 net.cpp:298] Memory required for data: 5169924
I0928 08:56:47.068634 16504 solver.cpp:190] Creating test net (#0) specified by net file: examples/mnist/lenet_train_test.prototxt
I0928 08:56:47.069635 16504 net.cpp:339] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0928 08:56:47.071641 16504 net.cpp:50] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_leveldb"
    batch_size: 100
    backend: LEVELDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 20
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool2"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0928 08:56:47.076653 16504 net.cpp:76] Memory required for data: 0
I0928 08:56:47.080662 16504 layer_factory.hpp:76] Creating layer mnist
I0928 08:56:47.082667 16504 net.cpp:110] Creating Layer mnist
I0928 08:56:47.082667 16504 net.cpp:433] mnist -> data
I0928 08:56:47.083168 16504 net.cpp:433] mnist -> label
I0928 08:56:47.096199 14732 db_leveldb.cpp:17] Opened leveldb examples/mnist/mnist_test_leveldb
I0928 08:56:47.097203 16504 data_layer.cpp:44] output data size: 100,1,28,28
I0928 08:56:47.098204 16504 base_data_layer.cpp:66] Initializing prefetch
I0928 08:56:47.098706 16504 base_data_layer.cpp:69] Prefetch initialized.
I0928 08:56:47.100209 16504 net.cpp:155] Setting up mnist
I0928 08:56:47.101712 16504 net.cpp:163] Top shape: 100 1 28 28 (78400)
I0928 08:56:47.102213 16504 net.cpp:163] Top shape: 100 (100)
I0928 08:56:47.103216 16504 net.cpp:174] Memory required for data: 314000
I0928 08:56:47.103718 16504 layer_factory.hpp:76] Creating layer label_mnist_1_split
I0928 08:56:47.105221 16504 net.cpp:110] Creating Layer label_mnist_1_split
I0928 08:56:47.106223 16504 net.cpp:477] label_mnist_1_split <- label
I0928 08:56:47.106724 16504 net.cpp:433] label_mnist_1_split -> label_mnist_1_split_0
I0928 08:56:47.107225 16504 net.cpp:433] label_mnist_1_split -> label_mnist_1_split_1
I0928 08:56:47.108228 16504 net.cpp:155] Setting up label_mnist_1_split
I0928 08:56:47.108729 16504 net.cpp:163] Top shape: 100 (100)
I0928 08:56:47.109230 16504 net.cpp:163] Top shape: 100 (100)
I0928 08:56:47.109230  7412 data_layer.cpp:105] Prefetch batch: 9 ms.
I0928 08:56:47.109230 16504 net.cpp:174] Memory required for data: 314800
I0928 08:56:47.109731  7412 data_layer.cpp:106]      Read time: 1.503 ms.
I0928 08:56:47.109731 16504 layer_factory.hpp:76] Creating layer conv1
I0928 08:56:47.110234  7412 data_layer.cpp:107] Transform time: 5.012 ms.
I0928 08:56:47.110234 16504 net.cpp:110] Creating Layer conv1
I0928 08:56:47.110734 16504 net.cpp:477] conv1 <- data
I0928 08:56:47.111235 16504 net.cpp:433] conv1 -> conv1
I0928 08:56:47.111737 16504 net.cpp:155] Setting up conv1
I0928 08:56:47.112238 16504 net.cpp:163] Top shape: 100 20 24 24 (1152000)
I0928 08:56:47.112238 16504 net.cpp:174] Memory required for data: 4922800
I0928 08:56:47.112738 16504 layer_factory.hpp:76] Creating layer pool1
I0928 08:56:47.113240 16504 net.cpp:110] Creating Layer pool1
I0928 08:56:47.113741 16504 net.cpp:477] pool1 <- conv1
I0928 08:56:47.113741 16504 net.cpp:433] pool1 -> pool1
I0928 08:56:47.114243 16504 net.cpp:155] Setting up pool1
I0928 08:56:47.114743 16504 net.cpp:163] Top shape: 100 20 12 12 (288000)
I0928 08:56:47.115245 16504 net.cpp:174] Memory required for data: 6074800
I0928 08:56:47.115245 16504 layer_factory.hpp:76] Creating layer conv2
I0928 08:56:47.115746 16504 net.cpp:110] Creating Layer conv2
I0928 08:56:47.115746 16504 net.cpp:477] conv2 <- pool1
I0928 08:56:47.116247 16504 net.cpp:433] conv2 -> conv2
I0928 08:56:47.119256  7412 data_layer.cpp:105] Prefetch batch: 9 ms.
I0928 08:56:47.119755  7412 data_layer.cpp:106]      Read time: 1.002 ms.
I0928 08:56:47.119755  7412 data_layer.cpp:107] Transform time: 5.514 ms.
I0928 08:56:47.121259 16504 net.cpp:155] Setting up conv2
I0928 08:56:47.121762 16504 net.cpp:163] Top shape: 100 50 8 8 (320000)
I0928 08:56:47.122262 16504 net.cpp:174] Memory required for data: 7354800
I0928 08:56:47.122763 16504 layer_factory.hpp:76] Creating layer pool2
I0928 08:56:47.123265 16504 net.cpp:110] Creating Layer pool2
I0928 08:56:47.123766 16504 net.cpp:477] pool2 <- conv2
I0928 08:56:47.123766 16504 net.cpp:433] pool2 -> pool2
I0928 08:56:47.124266 16504 net.cpp:155] Setting up pool2
I0928 08:56:47.124768 16504 net.cpp:163] Top shape: 100 50 4 4 (80000)
I0928 08:56:47.125269 16504 net.cpp:174] Memory required for data: 7674800
I0928 08:56:47.125269 16504 layer_factory.hpp:76] Creating layer ip1
I0928 08:56:47.125771 16504 net.cpp:110] Creating Layer ip1
I0928 08:56:47.126271 16504 net.cpp:477] ip1 <- pool2
I0928 08:56:47.126772 16504 net.cpp:433] ip1 -> ip1
I0928 08:56:47.129781  7412 data_layer.cpp:105] Prefetch batch: 9 ms.
I0928 08:56:47.130281  7412 data_layer.cpp:106]      Read time: 1.505 ms.
I0928 08:56:47.130281  7412 data_layer.cpp:107] Transform time: 7.014 ms.
I0928 08:56:47.172883 16504 net.cpp:155] Setting up ip1
I0928 08:56:47.173385 16504 net.cpp:163] Top shape: 100 500 (50000)
I0928 08:56:47.173385 16504 net.cpp:174] Memory required for data: 7874800
I0928 08:56:47.173887 16504 layer_factory.hpp:76] Creating layer relu1
I0928 08:56:47.174388 16504 net.cpp:110] Creating Layer relu1
I0928 08:56:47.174388 16504 net.cpp:477] relu1 <- ip1
I0928 08:56:47.174888 16504 net.cpp:419] relu1 -> ip1 (in-place)
I0928 08:56:47.174888 16504 net.cpp:155] Setting up relu1
I0928 08:56:47.175390 16504 net.cpp:163] Top shape: 100 500 (50000)
I0928 08:56:47.175390 16504 net.cpp:174] Memory required for data: 8074800
I0928 08:56:47.175890 16504 layer_factory.hpp:76] Creating layer ip2
I0928 08:56:47.176393 16504 net.cpp:110] Creating Layer ip2
I0928 08:56:47.176393 16504 net.cpp:477] ip2 <- ip1
I0928 08:56:47.176893 16504 net.cpp:433] ip2 -> ip2
I0928 08:56:47.177896 16504 net.cpp:155] Setting up ip2
I0928 08:56:47.178203 16504 net.cpp:163] Top shape: 100 10 (1000)
I0928 08:56:47.178203 16504 net.