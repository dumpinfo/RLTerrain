Log file created at: 2015/09/28 17:57:47
Running on machine: JXBP
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
I0928 17:57:47.925220  2000 solver.cpp:58] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 10000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: CPU
net: "examples/mnist/lenet_train_test.prototxt"
I0928 17:57:47.936203  2000 solver.cpp:100] Creating training net from net file: examples/mnist/lenet_train_test.prototxt
I0928 17:57:47.947213  2000 net.cpp:339] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0928 17:57:47.948215  2000 net.cpp:339] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0928 17:57:47.951218  2000 net.cpp:50] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_leveldb"
    batch_size: 64
    backend: LEVELDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 20
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool2"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0928 17:57:47.960441  2000 net.cpp:76] Memory required for data: 0
I0928 17:57:47.961261  2000 layer_factory.hpp:76] Creating layer mnist
I0928 17:57:47.963767  2000 common.cpp:32] System entropy source not available, using fallback algorithm to generate seed instead.
I0928 17:57:47.968277  2000 net.cpp:110] Creating Layer mnist
I0928 17:57:47.969285  2000 net.cpp:433] mnist -> data
I0928 17:57:47.970281  2000 net.cpp:433] mnist -> label
I0928 17:57:47.983814 16836 db_leveldb.cpp:17] Opened leveldb examples/mnist/mnist_train_leveldb
I0928 17:57:47.984817  2000 data_layer.cpp:44] output data size: 64,1,28,28
I0928 17:57:47.985819  2000 base_data_layer.cpp:66] Initializing prefetch
I0928 17:57:47.986822  2000 base_data_layer.cpp:69] Prefetch initialized.
I0928 17:57:47.987323  2000 net.cpp:155] Setting up mnist
I0928 17:57:47.988325  2000 net.cpp:163] Top shape: 64 1 28 28 (50176)
I0928 17:57:47.989327  2000 net.cpp:163] Top shape: 64 (64)
I0928 17:57:47.990329  2000 net.cpp:174] Memory required for data: 200960
I0928 17:57:47.991333  2000 layer_factory.hpp:76] Creating layer conv1
I0928 17:57:47.992334  2000 net.cpp:110] Creating Layer conv1
I0928 17:57:47.992838  2000 net.cpp:477] conv1 <- data
I0928 17:57:47.993837  2000 net.cpp:433] conv1 -> conv1
I0928 17:57:47.994840  2832 data_layer.cpp:105] Prefetch batch: 7 ms.
I0928 17:57:47.994840  2832 data_layer.cpp:106]      Read time: 1.504 ms.
I0928 17:57:47.994840  2000 net.cpp:155] Setting up conv1
I0928 17:57:47.995342  2832 data_layer.cpp:107] Transform time: 4.008 ms.
I0928 17:57:47.995843  2000 net.cpp:163] Top shape: 64 20 24 24 (737280)
I0928 17:57:47.996845  2000 net.cpp:174] Memory required for data: 3150080
I0928 17:57:47.997848  2000 layer_factory.hpp:76] Creating layer pool1
I0928 17:57:47.998850  2000 net.cpp:110] Creating Layer pool1
I0928 17:57:47.999351  2000 net.cpp:477] pool1 <- conv1
I0928 17:57:47.999852  2000 net.cpp:433] pool1 -> pool1
I0928 17:57:48.000354  2000 net.cpp:155] Setting up pool1
I0928 17:57:48.000854  2000 net.cpp:163] Top shape: 64 20 12 12 (184320)
I0928 17:57:48.001356  2000 net.cpp:174] Memory required for data: 3887360
I0928 17:57:48.002359  2000 layer_factory.hpp:76] Creating layer conv2
I0928 17:57:48.002859  2000 net.cpp:110] Creating Layer conv2
I0928 17:57:48.003360  2000 net.cpp:477] conv2 <- pool1
I0928 17:57:48.003360  2832 data_layer.cpp:105] Prefetch batch: 7 ms.
I0928 17:57:48.003861  2000 net.cpp:433] conv2 -> conv2
I0928 17:57:48.004364  2832 data_layer.cpp:106]      Read time: 1.503 ms.
I0928 17:57:48.005867  2832 data_layer.cpp:107] Transform time: 4.01 ms.
I0928 17:57:48.010377  2000 net.cpp:155] Setting up conv2
I0928 17:57:48.010879  2000 net.cpp:163] Top shape: 64 50 8 8 (204800)
I0928 17:57:48.011379  2000 net.cpp:174] Memory required for data: 4706560
I0928 17:57:48.012382  2000 layer_factory.hpp:76] Creating layer pool2
I0928 17:57:48.012883  2000 net.cpp:110] Creating Layer pool2
I0928 17:57:48.012883  2832 data_layer.cpp:105] Prefetch batch: 6 ms.
I0928 17:57:48.013386  2000 net.cpp:477] pool2 <- conv2
I0928 17:57:48.013386  2832 data_layer.cpp:106]      Read time: 0.5 ms.
I0928 17:57:48.013886  2000 net.cpp:433] pool2 -> pool2
I0928 17:57:48.014389  2832 data_layer.cpp:107] Transform time: 3.007 ms.
I0928 17:57:48.014889  2000 net.cpp:155] Setting up pool2
I0928 17:57:48.015890  2000 net.cpp:163] Top shape: 64 50 4 4 (51200)
I0928 17:57:48.016392  2000 net.cpp:174] Memory required for data: 4911360
I0928 17:57:48.016893  2000 layer_factory.hpp:76] Creating layer ip1
I0928 17:57:48.017395  2000 net.cpp:110] Creating Layer ip1
I0928 17:57:48.017395  2000 net.cpp:477] ip1 <- pool2
I0928 17:57:48.018396  2000 net.cpp:433] ip1 -> ip1
I0928 17:57:48.063504  2000 net.cpp:155] Setting up ip1
I0928 17:57:48.064527  2000 net.cpp:163] Top shape: 64 500 (32000)
I0928 17:57:48.065008  2000 net.cpp:174] Memory required for data: 5039360
I0928 17:57:48.066011  2000 layer_factory.hpp:76] Creating layer relu1
I0928 17:57:48.066512  2000 net.cpp:110] Creating Layer relu1
I0928 17:57:48.067013  2000 net.cpp:477] relu1 <- ip1
I0928 17:57:48.067013  2000 net.cpp:419] relu1 -> ip1 (in-place)
I0928 17:57:48.067514  2000 net.cpp:155] Setting up relu1
I0928 17:57:48.068017  2000 net.cpp:163] Top shape: 64 500 (32000)
I0928 17:57:48.068517  2000 net.cpp:174] Memory required for data: 5167360
I0928 17:57:48.069018  2000 layer_factory.hpp:76] Creating layer ip2
I0928 17:57:48.070020  2000 net.cpp:110] Creating Layer ip2
I0928 17:57:48.070020  2000 net.cpp:477] ip2 <- ip1
I0928 17:57:48.071023  2000 net.cpp:433] ip2 -> ip2
I0928 17:57:48.072026  2000 net.cpp:155] Setting up ip2
I0928 17:57:48.072527  2000 net.cpp:163] Top shape: 64 10 (640)
I0928 17:57:48.074030  2000 net.cpp:174] Memory required for data: 5169920
I0928 17:57:48.075033  2000 layer_factory.hpp:76] Creating layer loss
I0928 17:57:48.075534  2000 net.cpp:110] Creating Layer loss
I0928 17:57:48.076035  2000 net.cpp:477] loss <- ip2
I0928 17:57:48.076539  2000 net.cpp:477] loss <- label
I0928 17:57:48.076539  2000 net.cpp:433] loss -> loss
I0928 17:57:48.077540  2000 layer_factory.hpp:76] Creating layer loss
I0928 17:57:48.078042  2000 net.cpp:155] Setting up loss
I0928 17:57:48.078543  2000 net.cpp:163] Top shape: (1)
I0928 17:57:48.079042  2000 net.cpp:168]     with loss weight 1
I0928 17:57:48.079042  2000 net.cpp:174] Memory required for data: 5169924
I0928 17:57:48.079545  2000 net.cpp:236] loss needs backward computation.
I0928 17:57:48.080045  2000 net.cpp:236] ip2 needs backward computation.
I0928 17:57:48.080546  2000 net.cpp:236] relu1 needs backward computation.
I0928 17:57:48.081050  2000 net.cpp:236] ip1 needs backward computation.
I0928 17:57:48.081549  2000 net.cpp:236] pool2 needs backward computation.
I0928 17:57:48.082051  2000 net.cpp:236] conv2 needs backward computation.
I0928 17:57:48.082553  2000 net.cpp:236] pool1 needs backward computation.
I0928 17:57:48.083052  2000 net.cpp:236] conv1 needs backward computation.
I0928 17:57:48.083554  2000 net.cpp:240] mnist does not need backward computation.
I0928 17:57:48.084055  2000 net.cpp:283] This network produces output loss
I0928 17:57:48.084558  2000 net.cpp:297] Network initialization done.
I0928 17:57:48.085057  2000 net.cpp:298] Memory required for data: 5169924
I0928 17:57:48.088564  2000 solver.cpp:190] Creating test net (#0) specified by net file: examples/mnist/lenet_train_test.prototxt
I0928 17:57:48.089567  2000 net.cpp:339] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0928 17:57:48.092593  2000 net.cpp:50] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_leveldb"
    batch_size: 100
    backend: LEVELDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 20
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool2"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0928 17:57:48.098088  2000 net.cpp:76] Memory required for data: 0
I0928 17:57:48.098590  2000 layer_factory.hpp:76] Creating layer mnist
I0928 17:57:48.100095  2000 net.cpp:110] Creating Layer mnist
I0928 17:57:48.100596  2000 net.cpp:433] mnist -> data
I0928 17:57:48.101095  2000 net.cpp:433] mnist -> label
I0928 17:57:48.114126  4996 db_leveldb.cpp:17] Opened leveldb examples/mnist/mnist_test_leveldb
I0928 17:57:48.115129  2000 data_layer.cpp:44] output data size: 100,1,28,28
I0928 17:57:48.115630  2000 base_data_layer.cpp:66] Initializing prefetch
I0928 17:57:48.116132  2000 base_data_layer.cpp:69] Prefetch initialized.
I0928 17:57:48.117635  2000 net.cpp:155] Setting up mnist
I0928 17:57:48.118136  2000 net.cpp:163] Top shape: 100 1 28 28 (78400)
I0928 17:57:48.118136  2000 net.cpp:163] Top shape: 100 (100)
I0928 17:57:48.118638  2000 net.cpp:174] Memory required for data: 314000
I0928 17:57:48.118638  2000 layer_factory.hpp:76] Creating layer label_mnist_1_split
I0928 17:57:48.119139  2000 net.cpp:110] Creating Layer label_mnist_1_split
I0928 17:57:48.119640  2000 net.cpp:477] label_mnist_1_split <- label
I0928 17:57:48.119640  2000 net.cpp:433] label_mnist_1_split -> label_mnist_1_split_0
I0928 17:57:48.120141  2000 net.cpp:433] label_mnist_1_split -> label_mnist_1_split_1
I0928 17:57:48.120642  2000 net.cpp:155] Setting up label_mnist_1_split
I0928 17:57:48.121143  2000 net.cpp:163] Top shape: 100 (100)
I0928 17:57:48.121645  2000 net.cpp:163] Top shape: 100 (100)
I0928 17:57:48.121645  2000 net.cpp:174] Memory required for data: 314800
I0928 17:57:48.122146  2000 layer_factory.hpp:76] Creating layer conv1
I0928 17:57:48.122648  2000 net.cpp:110] Creating Layer conv1
I0928 17:57:48.122648  2000 net.cpp:477] conv1 <- data
I0928 17:57:48.123651  2000 net.cpp:433] conv1 -> conv1
I0928 17:57:48.124151  2000 net.cpp:155] Setting up conv1
I0928 17:57:48.124652  2000 net.cpp:163] Top shape: 100 20 24 24 (1152000)
I0928 17:57:48.125154  2000 net.cpp:174] Memory required for data: 4922800
I0928 17:57:48.125654  2000 layer_factory.hpp:76] Creating layer pool1
I0928 17:57:48.126155  2000 net.cpp:110] Creating Layer pool1
I0928 17:57:48.126155  2000 net.cpp:477] pool1 <- conv1
I0928 17:57:48.126657  2000 net.cpp:433] pool1 -> pool1
I0928 17:57:48.127158  2000 net.cpp:155] Setting up pool1
I0928 17:57:48.127158  1148 data_layer.cpp:105] Prefetch batch: 9 ms.
I0928 17:57:48.127158  2000 net.cpp:163] Top shape: 100 20 12 12 (288000)
I0928 17:57:48.127660  1148 data_layer.cpp:106]      Read time: 1.002 ms.
I0928 17:57:48.127660  2000 net.cpp:174] Memory required for data: 6074800
I0928 17:57:48.128160  1148 data_layer.cpp:107] Transform time: 5.514 ms.
I0928 17:57:48.128160  2000 layer_factory.hpp:76] Creating layer conv2
I0928 17:57:48.128661  2000 net.cpp:110] Creating Layer conv2
I0928 17:57:48.128661  2000 net.cpp:477] conv2 <- pool1
I0928 17:57:48.129163  2000 net.cpp:433] conv2 -> conv2
I0928 17:57:48.134176  2000 net.cpp:155] Setting up conv2
I0928 17:57:48.134676  2000 net.cpp:163] Top shape: 100 50 8 8 (320000)
I0928 17:57:48.135177  2000 net.cpp:174] Memory required for data: 7354800
I0928 17:57:48.135679  2000 layer_factory.hpp:76] Creating layer pool2
I0928 17:57:48.136179  2000 net.cpp:110] Creating Layer pool2
I0928 17:57:48.136682  2000 net.cpp:477] pool2 <- conv2
I0928 17:57:48.136682  1148 data_layer.cpp:105] Prefetch batch: 8 ms.
I0928 17:57:48.136682  2000 net.cpp:433] pool2 -> pool2
I0928 17:57:48.137182  1148 data_layer.cpp:106]      Read time: 1.004 ms.
I0928 17:57:48.137182  2000 net.cpp:155] Setting up pool2
I0928 17:57:48.137182  1148 data_layer.cpp:107] Transform time: 4.511 ms.
I0928 17:57:48.137684  2000 net.cpp:163] Top shape: 100 50 4 4 (80000)
I0928 17:57:48.138185  2000 net.cpp:174] Memory required for data: 7674800
I0928 17:57:48.139188  2000 layer_factory.hpp:76] Creating layer ip1
I0928 17:57:48.139689  2000 net.cpp:110] Creating Layer ip1
I0928 17:57:48.140190  2000 net.cpp:477] ip1 <- pool2
I0928 17:57:48.140691  2000 net.cpp:433] ip1 -> ip1
I0928 17:57:48.147207  1148 data_layer.cpp:105] Prefetch batch: 9 ms.
I0928 17:57:48.147207  1148 data_layer.cpp:106]      Read time: 2.506 ms.
I0928 17:57:48.147708  1148 data_layer.cpp:107] Transform time: 3.508 ms.
I0928 17:57:48.189308  2000 net.cpp:155] Setting up ip1
I0928 17:57:48.189808  2000 net.cpp:163] Top shape: 100 500 (50000)
I0928 17:57:48.190310  2000 net.cpp:174] Memory required for data: 7874800
I0928 17:57:48.190811  2000 layer_factory.hpp:76] Creating layer relu1
I0928 17:57:48.191314  2000 net.cpp:110] Creating Layer relu1
I0928 17:57:48.191314  2000 net.cpp:477] relu1 <- ip1
I0928 17:57:48.191814  2000 net.cpp:419] relu1 -> ip1 (in-place)
I0928 17:57:48.192317  2000 net.cpp:155] Setting up relu1
I0928 17:57:48.192317  2000 net.cpp:163] Top shape: 100 500 (50000)
I0928 17:57:48.192816  2000 net.cpp:174] Memory required for data: 8074800
I0928 17:57:48.193317  2000 layer_factory.hpp:76] Creating layer ip2
I0928 17:57:48.193317  2000 net.cpp:110] Creating Layer ip2
I0928 17:57:48.193819  2000 net.cpp:477] ip2 <- ip1
I0928 17:57:48.194319  2000 net.cpp:433] ip2 -> ip2
I0928 17:57:48.195340  2000 net.cpp:155] Setting up ip2
I0928 17:57:48.195823  2000 net.cpp:163] Top shape: 100 10 (1000)
I0928 17:57:48.196324  2000 net.