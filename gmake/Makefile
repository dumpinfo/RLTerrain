# GNU Make solution makefile autogenerated by Premake
# Type "make help" for usage help

ifndef config
  config=debug32
endif
export config

PROJECTS := TerrainRL terrainrlUtil terrainrlLearning terrainrlAnim terrainrlSim terrainrlRender terrainrlScenarios TerrainRL_Optimizer terrainRLAdapter

.PHONY: all clean help $(PROJECTS)

all: $(PROJECTS)

TerrainRL: terrainrlScenarios terrainrlLearning terrainrlAnim terrainrlSim terrainrlUtil terrainrlRender
	@echo "==== Building TerrainRL ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f TerrainRL.make

terrainrlUtil: 
	@echo "==== Building terrainrlUtil ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f terrainrlUtil.make

terrainrlLearning: terrainrlUtil terrainrlAnim
	@echo "==== Building terrainrlLearning ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f terrainrlLearning.make

terrainrlAnim: terrainrlUtil
	@echo "==== Building terrainrlAnim ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f terrainrlAnim.make

terrainrlSim: terrainrlUtil terrainrlAnim terrainrlLearning
	@echo "==== Building terrainrlSim ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f terrainrlSim.make

terrainrlRender: terrainrlUtil terrainrlAnim
	@echo "==== Building terrainrlRender ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f terrainrlRender.make

terrainrlScenarios: terrainrlLearning terrainrlAnim terrainrlSim terrainrlUtil terrainrlRender
	@echo "==== Building terrainrlScenarios ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f terrainrlScenarios.make

TerrainRL_Optimizer: terrainrlScenarios terrainrlLearning terrainrlAnim terrainrlSim terrainrlUtil terrainrlRender
	@echo "==== Building TerrainRL_Optimizer ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f TerrainRL_Optimizer.make

terrainRLAdapter: terrainrlScenarios terrainrlLearning terrainrlAnim terrainrlSim terrainrlUtil terrainrlRender
	@echo "==== Building terrainRLAdapter ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f terrainRLAdapter.make

clean:
	@${MAKE} --no-print-directory -C . -f TerrainRL.make clean
	@${MAKE} --no-print-directory -C . -f terrainrlUtil.make clean
	@${MAKE} --no-print-directory -C . -f terrainrlLearning.make clean
	@${MAKE} --no-print-directory -C . -f terrainrlAnim.make clean
	@${MAKE} --no-print-directory -C . -f terrainrlSim.make clean
	@${MAKE} --no-print-directory -C . -f terrainrlRender.make clean
	@${MAKE} --no-print-directory -C . -f terrainrlScenarios.make clean
	@${MAKE} --no-print-directory -C . -f TerrainRL_Optimizer.make clean
	@${MAKE} --no-print-directory -C . -f terrainRLAdapter.make clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "   debug32"
	@echo "   release32"
	@echo "   debug64"
	@echo "   release64"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   TerrainRL"
	@echo "   terrainrlUtil"
	@echo "   terrainrlLearning"
	@echo "   terrainrlAnim"
	@echo "   terrainrlSim"
	@echo "   terrainrlRender"
	@echo "   terrainrlScenarios"
	@echo "   TerrainRL_Optimizer"
	@echo "   terrainRLAdapter"
	@echo ""
	@echo "For more information, see http://industriousone.com/premake/quick-start"
