# GNU Make project makefile autogenerated by Premake
ifndef config
  config=debug32
endif

ifndef verbose
  SILENT = @
endif

ifndef CC
  CC = gcc
endif

ifndef CXX
  CXX = g++
endif

ifndef AR
  AR = ar
endif

ifeq ($(config),debug32)
  OBJDIR     = obj/x32/Debug/TerrainRL_Optimizer
  TARGETDIR  = ../x64/Debug
  TARGET     = $(TARGETDIR)/TerrainRL_Optimizer
  DEFINES   += -DDEBUG -D_CRT_SECURE_NO_WARNINGS -D_SCL_SECURE_NO_WARNINGS -DCPU_ONLY -DGOOGLE_GLOG_DLL_DECL= -DENABLE_TRAINING -D_LINUX_
  INCLUDES  += -I../optimizer -I.. -I../optimizer/opt -I../anim -I../learning -I../sim -I../render -I../scenarios -I../util -I../external/Bullet/src -I../external -I../external/jsoncpp/include -I../external/caffe/include -I../external/caffe/build/src -IC:/Program\ Files\ \(x86\)/boost/boost_1_58_0 -I../external/3rdparty/include/hdf5 -I../external/3rdparty/include -I../external/3rdparty/include/openblas -I../external/3rdparty/include/lmdb -I/usr/local/cuda/include -I../external/OpenCV/include -I../external/caffe/src -I../external/CMA-ESpp/cma-es -I/usr/include/hdf5/serial
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -g -m32 -ggdb -fPIC -std=c++0x -ggdb -g
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -m32 -L/usr/lib32 -Wl,-rpath,/disk2/MotionDev/TerrainTest/OKMIMIC/TerrainRLSim/lib -L../external/Bullet/bin -L../external/jsoncpp/build/debug/src/lib_json -L../external/caffe/build/lib -L../lib
  LIBS      += -lterrainrlScenarios -lterrainrlLearning -lterrainrlAnim -lterrainrlSim -lterrainrlUtil -lterrainrlRender -lX11 -ldl -lpthread -lBulletDynamics_gmake_x64_debug -lBulletCollision_gmake_x64_debug -lLinearMath_gmake_x64_debug -ljsoncpp -lboost_system -lcaffe -lglog -lhdf5_serial_hl -lhdf5_serial
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LDDEPS    += ../lib/libterrainrlScenarios.so ../lib/libterrainrlLearning.so ../lib/libterrainrlAnim.so ../lib/libterrainrlSim.so ../lib/libterrainrlUtil.so ../lib/libterrainrlRender.so
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(ARCH) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),release32)
  OBJDIR     = obj/x32/Release/TerrainRL_Optimizer
  TARGETDIR  = ../x64/Release
  TARGET     = $(TARGETDIR)/TerrainRL_Optimizer
  DEFINES   += -DNDEBUG -D_CRT_SECURE_NO_WARNINGS -D_SCL_SECURE_NO_WARNINGS -DCPU_ONLY -DGOOGLE_GLOG_DLL_DECL= -DENABLE_TRAINING -D_LINUX_
  INCLUDES  += -I../optimizer -I.. -I../optimizer/opt -I../anim -I../learning -I../sim -I../render -I../scenarios -I../util -I../external/Bullet/src -I../external -I../external/jsoncpp/include -I../external/caffe/include -I../external/caffe/build/src -IC:/Program\ Files\ \(x86\)/boost/boost_1_58_0 -I../external/3rdparty/include/hdf5 -I../external/3rdparty/include -I../external/3rdparty/include/openblas -I../external/3rdparty/include/lmdb -I/usr/local/cuda/include -I../external/OpenCV/include -I../external/caffe/src -I../external/CMA-ESpp/cma-es -I/usr/include/hdf5/serial
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -g -O2 -m32 -ggdb -fPIC -std=c++0x -ggdb -g
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -m32 -L/usr/lib32 -Wl,-rpath,/disk2/MotionDev/TerrainTest/OKMIMIC/TerrainRLSim/lib -L../external/Bullet/bin -L../external/jsoncpp/build/debug/src/lib_json -L../external/caffe/build/lib -L../lib
  LIBS      += -lterrainrlScenarios -lterrainrlLearning -lterrainrlAnim -lterrainrlSim -lterrainrlUtil -lterrainrlRender -lX11 -ldl -lpthread -lBulletDynamics_gmake_x64_release -lBulletCollision_gmake_x64_release -lLinearMath_gmake_x64_release -ljsoncpp -lboost_system -lcaffe -lglog -lhdf5_serial_hl -lhdf5_serial
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LDDEPS    += ../lib/libterrainrlScenarios.so ../lib/libterrainrlLearning.so ../lib/libterrainrlAnim.so ../lib/libterrainrlSim.so ../lib/libterrainrlUtil.so ../lib/libterrainrlRender.so
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(ARCH) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),debug64)
  OBJDIR     = obj/x64/Debug/TerrainRL_Optimizer
  TARGETDIR  = ../x64/Debug
  TARGET     = $(TARGETDIR)/TerrainRL_Optimizer
  DEFINES   += -DDEBUG -D_CRT_SECURE_NO_WARNINGS -D_SCL_SECURE_NO_WARNINGS -DCPU_ONLY -DGOOGLE_GLOG_DLL_DECL= -DENABLE_TRAINING -D_LINUX_
  INCLUDES  += -I../optimizer -I.. -I../optimizer/opt -I../anim -I../learning -I../sim -I../render -I../scenarios -I../util -I../external/Bullet/src -I../external -I../external/jsoncpp/include -I../external/caffe/include -I../external/caffe/build/src -IC:/Program\ Files\ \(x86\)/boost/boost_1_58_0 -I../external/3rdparty/include/hdf5 -I../external/3rdparty/include -I../external/3rdparty/include/openblas -I../external/3rdparty/include/lmdb -I/usr/local/cuda/include -I../external/OpenCV/include -I../external/caffe/src -I../external/CMA-ESpp/cma-es -I/usr/include/hdf5/serial
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -g -m64 -ggdb -fPIC -std=c++0x -ggdb -g
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -m64 -L/usr/lib64 -Wl,-rpath,/disk2/MotionDev/TerrainTest/OKMIMIC/TerrainRLSim/lib -L../external/Bullet/bin -L../external/jsoncpp/build/debug/src/lib_json -L../external/caffe/build/lib -L../lib
  LIBS      += -lterrainrlScenarios -lterrainrlLearning -lterrainrlAnim -lterrainrlSim -lterrainrlUtil -lterrainrlRender -lX11 -ldl -lpthread -lBulletDynamics_gmake_x64_debug -lBulletCollision_gmake_x64_debug -lLinearMath_gmake_x64_debug -ljsoncpp -lboost_system -lcaffe -lglog -lhdf5_serial_hl -lhdf5_serial
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LDDEPS    += ../lib/libterrainrlScenarios.so ../lib/libterrainrlLearning.so ../lib/libterrainrlAnim.so ../lib/libterrainrlSim.so ../lib/libterrainrlUtil.so ../lib/libterrainrlRender.so
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(ARCH) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),release64)
  OBJDIR     = obj/x64/Release/TerrainRL_Optimizer
  TARGETDIR  = ../x64/Release
  TARGET     = $(TARGETDIR)/TerrainRL_Optimizer
  DEFINES   += -DNDEBUG -D_CRT_SECURE_NO_WARNINGS -D_SCL_SECURE_NO_WARNINGS -DCPU_ONLY -DGOOGLE_GLOG_DLL_DECL= -DENABLE_TRAINING -D_LINUX_
  INCLUDES  += -I../optimizer -I.. -I../optimizer/opt -I../anim -I../learning -I../sim -I../render -I../scenarios -I../util -I../external/Bullet/src -I../external -I../external/jsoncpp/include -I../external/caffe/include -I../external/caffe/build/src -IC:/Program\ Files\ \(x86\)/boost/boost_1_58_0 -I../external/3rdparty/include/hdf5 -I../external/3rdparty/include -I../external/3rdparty/include/openblas -I../external/3rdparty/include/lmdb -I/usr/local/cuda/include -I../external/OpenCV/include -I../external/caffe/src -I../external/CMA-ESpp/cma-es -I/usr/include/hdf5/serial
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -g -O2 -m64 -ggdb -fPIC -std=c++0x -ggdb -g
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -m64 -L/usr/lib64 -Wl,-rpath,/disk2/MotionDev/TerrainTest/OKMIMIC/TerrainRLSim/lib -L../external/Bullet/bin -L../external/jsoncpp/build/debug/src/lib_json -L../external/caffe/build/lib -L../lib
  LIBS      += -lterrainrlScenarios -lterrainrlLearning -lterrainrlAnim -lterrainrlSim -lterrainrlUtil -lterrainrlRender -lX11 -ldl -lpthread -lBulletDynamics_gmake_x64_release -lBulletCollision_gmake_x64_release -lLinearMath_gmake_x64_release -ljsoncpp -lboost_system -lcaffe -lglog -lhdf5_serial_hl -lhdf5_serial
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LDDEPS    += ../lib/libterrainrlScenarios.so ../lib/libterrainrlLearning.so ../lib/libterrainrlAnim.so ../lib/libterrainrlSim.so ../lib/libterrainrlUtil.so ../lib/libterrainrlRender.so
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(ARCH) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

OBJECTS := \
	$(OBJDIR)/OptFunc.o \
	$(OBJDIR)/OptCMA.o \
	$(OBJDIR)/Optimizer.o \
	$(OBJDIR)/OptScenarioSoccerEval.o \
	$(OBJDIR)/OptScenarioImitateStepEval.o \
	$(OBJDIR)/OptScenario.o \
	$(OBJDIR)/OptScenarioHikeEval.o \
	$(OBJDIR)/OptScenarioMTU.o \
	$(OBJDIR)/ScenarioSegmentMotion.o \
	$(OBJDIR)/ScenarioRetargetMotion.o \
	$(OBJDIR)/OptScenarioJump.o \
	$(OBJDIR)/OptScenarioClimb.o \
	$(OBJDIR)/OptScenarioImitateTargetEval.o \
	$(OBJDIR)/OptScenarioTrackMotion.o \
	$(OBJDIR)/OptScenarioPoliMTU.o \
	$(OBJDIR)/OptScenarioPoliEval.o \
	$(OBJDIR)/OptScenarioSimChar.o \
	$(OBJDIR)/OptScenarioMimicEval.o \
	$(OBJDIR)/OptScenarioLocoEval.o \
	$(OBJDIR)/OptScenarioVelCtrl.o \
	$(OBJDIR)/OptScenarioImitateEval.o \
	$(OBJDIR)/ScenarioProcessMocap.o \
	$(OBJDIR)/ScenarioSampleAction.o \
	$(OBJDIR)/Main.o \

RESOURCES := \

SHELLTYPE := msdos
ifeq (,$(ComSpec)$(COMSPEC))
  SHELLTYPE := posix
endif
ifeq (/bin,$(findstring /bin,$(SHELL)))
  SHELLTYPE := posix
endif

.PHONY: clean prebuild prelink

all: $(TARGETDIR) $(OBJDIR) prebuild prelink $(TARGET)
	@:

$(TARGET): $(GCH) $(OBJECTS) $(LDDEPS) $(RESOURCES)
	@echo Linking TerrainRL_Optimizer
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning TerrainRL_Optimizer
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild:
	$(PREBUILDCMDS)

prelink:
	$(PRELINKCMDS)

ifneq (,$(PCH))
$(GCH): $(PCH)
	@echo $(notdir $<)
	-$(SILENT) cp $< $(OBJDIR)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
endif

$(OBJDIR)/OptFunc.o: ../optimizer/opt/OptFunc.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/OptCMA.o: ../optimizer/opt/OptCMA.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Optimizer.o: ../optimizer/opt/Optimizer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/OptScenarioSoccerEval.o: ../optimizer/scenarios/OptScenarioSoccerEval.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/OptScenarioImitateStepEval.o: ../optimizer/scenarios/OptScenarioImitateStepEval.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/OptScenario.o: ../optimizer/scenarios/OptScenario.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/OptScenarioHikeEval.o: ../optimizer/scenarios/OptScenarioHikeEval.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/OptScenarioMTU.o: ../optimizer/scenarios/OptScenarioMTU.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/ScenarioSegmentMotion.o: ../optimizer/scenarios/ScenarioSegmentMotion.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/ScenarioRetargetMotion.o: ../optimizer/scenarios/ScenarioRetargetMotion.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/OptScenarioJump.o: ../optimizer/scenarios/OptScenarioJump.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/OptScenarioClimb.o: ../optimizer/scenarios/OptScenarioClimb.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/OptScenarioImitateTargetEval.o: ../optimizer/scenarios/OptScenarioImitateTargetEval.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/OptScenarioTrackMotion.o: ../optimizer/scenarios/OptScenarioTrackMotion.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/OptScenarioPoliMTU.o: ../optimizer/scenarios/OptScenarioPoliMTU.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/OptScenarioPoliEval.o: ../optimizer/scenarios/OptScenarioPoliEval.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/OptScenarioSimChar.o: ../optimizer/scenarios/OptScenarioSimChar.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/OptScenarioMimicEval.o: ../optimizer/scenarios/OptScenarioMimicEval.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/OptScenarioLocoEval.o: ../optimizer/scenarios/OptScenarioLocoEval.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/OptScenarioVelCtrl.o: ../optimizer/scenarios/OptScenarioVelCtrl.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/OptScenarioImitateEval.o: ../optimizer/scenarios/OptScenarioImitateEval.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/ScenarioProcessMocap.o: ../optimizer/scenarios/ScenarioProcessMocap.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/ScenarioSampleAction.o: ../optimizer/scenarios/ScenarioSampleAction.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Main.o: ../optimizer/Main.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"

-include $(OBJECTS:%.o=%.d)
